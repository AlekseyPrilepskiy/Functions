internal class Program
{
    private static void Main(string[] args)
    {
        char[,] map = {
            { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
            { '#', ' ', '.', '.', '.', '.', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#' },
            { '#', '.', '#', '#', '#', '.', '#', ' ', ' ', '*', ' ', ' ', ' ', '#', '*', '#' },
            { '#', ' ', '#', '.', '*', '.', '#', '.', '*', '*', '#', ' ', ' ', '#', '.', '#' },
            { '#', ' ', '#', '.', '.', '.', '#', '.', '#', '#', '#', ' ', ' ', '#', '.', '#' },
            { '#', ' ', ' ', '.', '#', '#', '#', '.', '#', '#', '#', ' ', ' ', '#', '.', '#' },
            { '#', '#', '#', ' ', ' ', '.', '.', '.', '#', ' ', ' ', ' ', ' ', '#', ' ', '#' },
            { '#', '.', '#', ' ', ' ', '.', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
            { '#', '.', '#', ' ', ' ', '.', '#', '#', '#', ' ', '.', ' ', ' ', ' ', ' ', '#' },
            { '#', '.', '#', ' ', ' ', ' ', '.', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
            { '#', '.', ' ', ' ', ' ', ' ', '.', ' ', ' ', '.', ' ', ' ', ' ', '.', ' ', '#' },
            { '#', '.', '#', '#', '#', '#', ' ', ' ', ' ', ' ', '#', '#', '#', ' ', ' ', '#' },
            { '#', '.', '#', '*', '*', '#', ' ', '.', '.', ' ', '#', '#', '*', ' ', ' ', '#' },
            { '#', '.', '#', '.', '*', '*', ' ', ' ', ' ', ' ', '#', '#', '.', ' ', ' ', '#' },
            { '#', '.', '#', '.', '.', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', ' ', '#' },
            { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
        };

        ConsoleKeyInfo pressedKey = new ConsoleKeyInfo();

        int positionX = 1;
        int positionY = 1;
        int score = 0;

        Console.CursorVisible = false;

        while (true)
        {
            Console.ForegroundColor = ConsoleColor.DarkCyan;
            DrawMap(map);

            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.SetCursorPosition(positionX, positionY);
            Console.Write("@");

            Console.SetCursorPosition(map.GetLength(0) + 1, 0);
            Console.WriteLine($"Score: {score}");

            pressedKey = Console.ReadKey();

            MoveHero(pressedKey, ref positionX, ref positionY, ref score, map);

            Console.Clear();
        }
    }

    private static void CheckMoveHero(ConsoleKeyInfo pressedKey, ref int positionX, ref int positionY, ref int score, char[,] map)
    {
        int[] direction = GetDirection(pressedKey);

        int nextPositionX = positionX + direction[0];
        int nextPositionY = positionY + direction[1];

        char nextCell = map[nextPositionX, nextPositionY];

        if (nextCell != '#')
        {
            positionX = nextPositionX;
            positionY = nextPositionY;

            if (nextCell == '.')
            {
                score++;
                map[nextPositionX, nextPositionY] = ' ';
            }
            else if (nextCell == '*') 
            {
                score += 5;
                map[nextPositionX, nextPositionY] = ' ';
            }
        }
    }

    private static int[] GetDirection(ConsoleKeyInfo pressedKey)
    {
        int[] direction = { 0, 0 };

        if (pressedKey.Key == ConsoleKey.UpArrow)
        {
            direction[1] = -1;
        }
        else if (pressedKey.Key == ConsoleKey.DownArrow)
        {
            direction[1] = 1;
        }
        else if (pressedKey.Key == ConsoleKey.LeftArrow)
        {
            direction[0] = -1;
        }
        else if (pressedKey.Key == ConsoleKey.RightArrow)
        {
            direction[0] = 1;
        }

        return direction;
    }

    private static void DrawMap(char[,] map)
    {
        for (int i = 0; i < map.GetLength(0); i++)
        {
            for (int j = 0; j < map.GetLength(1); j++)
            {
                Console.Write(map[j, i]);
            }

            Console.WriteLine();
        }
    }
}
